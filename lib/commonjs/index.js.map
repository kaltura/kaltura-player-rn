{"version":3,"sources":["index.tsx"],"names":["KalturaPlayerModule","NativeModules","KalturaPlayerViewManager","KalturaPlayerEvents","KalturaPlayerEmitter","NativeEventEmitter","RNKalturaPlayer","KalturaPlayer","React","Component","componentDidMount","supportedEvents","forEach","type","eventListeners","push","addListener","event","emit","componentWillUnmount","remove","render","props","nativeRef","nativeComponentRef","propTypes","style","PropTypes","object","KalturaPlayerAPI","partnerId","options","setup","assetId","load","destroy","volume","setVolume","position","seekTo","isVisible","setPlayerVisibility","value","setKeepAwake","play","replay","pause","stop","trackId","changeTrack","prepare","setAutoplay"],"mappings":"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","sourcesContent":["import {\n  requireNativeComponent,\n  NativeModules,\n  ViewStyle,\n  NativeEventEmitter,\n} from 'react-native';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const KalturaPlayerModule = NativeModules.KalturaPlayerViewManager;\nconst KalturaPlayerEvents = NativeModules.KalturaPlayerEvents;\nexport const KalturaPlayerEmitter = new NativeEventEmitter(KalturaPlayerEvents);\n\nconst RNKalturaPlayer = requireNativeComponent('KalturaPlayerView');\n\ninterface KalturaPlayerProps {\n  style: ViewStyle\n}\n\nexport class KalturaPlayer extends React.Component<KalturaPlayerProps> {\n  nativeComponentRef: any;\n  eventListeners: any[] = [];\n\n  componentDidMount() {\n    const supportedEvents = [\n      \"canPlay\",\n      \"durationChanged\",\n      \"stopped\",\n      \"ended\",\n      \"loadedMetadata\",\n      \"play\",\n      \"pause\",\n      \"playing\",\n      \"seeking\",\n      \"seeked\",\n      \"replay\",\n      \"tracksAvailable\",\n      \"textTrackChanged\",\n      \"audioTrackChanged\",\n      \"videoTrackChanged\",\n      \"playbackInfo\",\n      \"stateChanged\",\n      \"timedMetadata\",\n      \"sourceSelected\",\n      \"loadedTimeRanges\",\n      \"playheadUpdate\",\n      \"error\",\n      \"errorLog\",\n      \"playbackStalled\",\n      \"playbackRate\",\n      \"timeUpdate\",\n      \"bookmarkError\",\n      \"loadMediaFailed\",\n      \"loadMediaSuccess\",\n      \"concurrencyError\",\n    ]\n    \n    supportedEvents.forEach(type => {\n      this.eventListeners.push(KalturaPlayerEmitter.addListener(type, (event: any) => {\n        KalturaPlayerEmitter.emit('KPlayerEvent', { type, ...event })\n      }));\n    })\n  }\n\n  componentWillUnmount() {\n    this.eventListeners.forEach(event => event.remove());\n  }\n\n  static propTypes: {\n    style: object;\n  };\n\n  render() {\n    return <RNKalturaPlayer {...this.props} ref={(nativeRef) => this.nativeComponentRef = nativeRef} />;\n  }\n}\n\nKalturaPlayer.propTypes = {\n  style: PropTypes.object\n};\n\nexport class KalturaPlayerAPI {\n  static setup = (partnerId: number, options: {\n    preload: boolean\n    autoplay: boolean\n    serverUrl: string\n    ks?: string\n  }) => {\n    return KalturaPlayerModule.setup(partnerId, options)\n  }\n  static load = (assetId: string, options: {\n    autoplay: boolean\n    assetType: \"media\" | \"recording\" | \"epg\"\n    protocol: \"http\" | \"https\"\n    playbackContextType?: \"playback\" | \"catchup\" | \"trailer\" | \"startOver\"\n    assetReferenceType?: \"media\" | \"epgInternal\" | \"epgExternal\" | \"npvr\"\n    urlType?: string\n    format?: string[]\n    fileId?: string[]\n    streamerType?: string\n    startPosition?: number\n  }) => {\n    return KalturaPlayerModule.load(assetId, options);\n  }\n  static destroy = () => {\n    return KalturaPlayerModule.destroy();\n  }\n  static setVolume = (volume: number) => {\n    return KalturaPlayerModule.setVolume(volume);\n  }\n  static seekTo = (position: number) => {\n    return KalturaPlayerModule.seekTo(position);\n  }\n  static setPlayerVisibility = (isVisible: boolean) => {\n    return KalturaPlayerModule.setPlayerVisibility(isVisible);\n  }\n  static setKeepAwake = (value: boolean) => {\n    return KalturaPlayerModule.setKeepAwake(value);\n  }\n  static play = () => {\n    return KalturaPlayerModule.play();\n  }\n  static replay = () => {\n    return KalturaPlayerModule.replay();\n  }\n  static pause = () => {\n    return KalturaPlayerModule.pause();\n  }\n  static stop = () => {\n    return KalturaPlayerModule.stop();\n  }\n  static changeTrack = (trackId: string) => {\n    return KalturaPlayerModule.changeTrack(trackId);\n  }\n  static prepare = () => {\n    return KalturaPlayerModule.prepare();\n  }\n  static setAutoplay = (value: boolean) => {\n    return KalturaPlayerModule.setAutoplay(value);\n  }\n}\n"]}